{"version":3,"sources":["components/ExpenseDate.js","components/UIcomponents/Card.js","components/ExpenseItem.js","components/Chart/ProgressBar.js","components/Chart/chart.js","components/Expenses.js","components/ExpenseForm.js","components/NewExpense.js","components/ExpenseFilter.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","date","month","toLocaleString","day","year","getFullYear","className","Card","props","classes","children","ExpenseItem","title","amount","ProgressBar","height","maxValue","Math","round","value","style","backgroundColor","Chart","datas","data","map","months","getMonth","valuesArray","max","ind","Expenses","expensesData","length","id","ExpenseForm","useState","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","event","preventDefault","newExpenseData","Date","random","isNaN","alert","onAddExpense","type","onChange","prevState","target","min","step","NewExpense","ExpenseFilter","selectedYear","onFilter","expenseData","App","updatedExpenseData","setUpdatedExpenseData","filteredExpenseData","setFilteredExpenses","prevData","filter","expense","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0d83fb6.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = ({ date }) => {\r\n  const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"CardUI \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"./UIcomponents/Card\";\r\n\r\nconst ExpenseItem = ({ title, amount, date }) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">â‚¹{amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ProgressBar.css\";\r\n\r\nfunction ProgressBar(props) {\r\n  let height = \"0\";\r\n\r\n  if (props.maxValue > 0) {\r\n    height = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"outest\">\r\n      <div className=\"outer\">\r\n        <div className=\"out\">\r\n          <div\r\n            className=\"inner\"\r\n            style={{\r\n              height,\r\n              backgroundColor: \"#61a6b0\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"month\">{props.month}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import ProgressBar from \"./ProgressBar\";\r\n\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props) {\r\n  const datas = props.data.map(({ amount, date }) => {\r\n    return {\r\n      amount,\r\n      date,\r\n    };\r\n  });\r\n\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ].map((month) => {\r\n    return { month, value: 0 };\r\n  });\r\n\r\n  for (const data of datas) {\r\n    const index = data.date.getMonth();\r\n    months[index].value += data.amount;\r\n  }\r\n\r\n  const valuesArray = months.map((month) => month.value);\r\n  const maxValue = Math.max(...valuesArray);\r\n\r\n  return (\r\n    <div className=\"bars\">\r\n      {months.map((month, ind) => (\r\n        <ProgressBar\r\n          value={month.value}\r\n          maxValue={maxValue}\r\n          month={month.month}\r\n          key={ind}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"./UIcomponents/Card\";\r\nimport Chart from \"../components/Chart/chart\";\r\n\r\nconst Expenses = ({ expensesData }) => {\r\n  if (!expensesData.length) {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <p className=\"no-expenses\">No expenses in this year.</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Chart data={expensesData} />\r\n        <Card className=\"expenses\">\r\n          {expensesData.map(({ title, amount, date, id }) => (\r\n            <ExpenseItem title={title} amount={amount} date={date} key={id} />\r\n          ))}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n\r\n  const enteredTitleHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    });\r\n  };\r\n  const enteredAmountHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredAmount: event.target.value };\r\n    });\r\n  };\r\n  const enteredDateHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredDate: event.target.value };\r\n    });\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const newExpenseData = {\r\n      title: userInput.enteredTitle,\r\n      amount: userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate),\r\n      id: Math.random(),\r\n    };\r\n\r\n    setUserInput({\r\n      enteredTitle: \"\",\r\n      enteredAmount: \"\",\r\n      enteredDate: \"\",\r\n    });\r\n\r\n    if (\r\n      isNaN(newExpenseData.date) ||\r\n      newExpenseData.title === \"\" ||\r\n      newExpenseData.amount === \"\"\r\n    ) {\r\n      alert(\"Enter a valid Expense Title, Amount and Date !\");\r\n      return;\r\n    } else {\r\n      props.onAddExpense(newExpenseData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            value={userInput.enteredTitle}\r\n            type=\"text\"\r\n            onChange={enteredTitleHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            value={userInput.enteredAmount}\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"0.1\"\r\n            onChange={enteredAmountHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value={userInput.enteredDate}\r\n            type=\"date\"\r\n            min=\"2018-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={enteredDateHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./UIcomponents/Card\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const expenseHandler = (newExpenseData) => {\r\n    props.onAddExpense(newExpenseData);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"new-expense\">\r\n      <ExpenseForm onAddExpense={expenseHandler} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const selectionHandler = (event) => {\r\n    const selectedYear = event.target.value;\r\n    props.onFilter(selectedYear);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"expenses-filter\">\r\n        <div className=\"expenses-filter__control\">\r\n          <label>Filter by year</label>\r\n          <select onChange={selectionHandler}>\r\n            <option value=\"All\">All</option>\r\n            <option value=\"2023\">2023</option>\r\n            <option value=\"2022\">2022</option>\r\n            <option value=\"2021\">2021</option>\r\n            <option value=\"2020\">2020</option>\r\n            <option value=\"2019\">2019</option>\r\n            <option value=\"2018\">2018</option>\r\n            <option value=\"2017\">2017</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses\";\r\nimport NewExpense from \"./components/NewExpense\";\r\nimport ExpenseFilter from \"./components/ExpenseFilter\";\r\n\r\nconst expenseData = [\r\n  { id: 1, title: \"Bike\", amount: 70000, date: new Date(2019, 5, 13) },\r\n  { id: 2, title: \"MacBook\", amount: 100000, date: new Date(2020, 8, 21) },\r\n  { id: 3, title: \"iPhone\", amount: 90000, date: new Date(2021, 4, 20) },\r\n];\r\n\r\nfunction App() {\r\n  const [updatedExpenseData, setUpdatedExpenseData] = useState(expenseData);\r\n\r\n  const [filteredExpenseData, setFilteredExpenses] = useState([\r\n    ...updatedExpenseData,\r\n  ]);\r\n\r\n  const addExpenseHandler = (newExpenseData) => {\r\n    setUpdatedExpenseData((prevData) => {\r\n      return [newExpenseData, ...prevData];\r\n    });\r\n  };\r\n\r\n  const filterHandler = (selectedYear) => {\r\n    if (selectedYear === \"All\") {\r\n      setFilteredExpenses(updatedExpenseData);\r\n    } else {\r\n      setFilteredExpenses(\r\n        updatedExpenseData.filter(\r\n          (expense) => expense.date.getFullYear().toString() === selectedYear\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <ExpenseFilter onFilter={filterHandler} />\r\n      <Expenses expensesData={filteredExpenseData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}